Fix chartView page proceed button overflow issue






 const CircularProgressIndicator(
valueColor: AlwaysStoppedAnimation<Color>(
    Colors.brown),
    backgroundColor: Color(0xFF483C32),
),



// import 'dart:developer';
// import 'package:flutter/material.dart';
// import 'package:font_awesome_flutter/font_awesome_flutter.dart';
// import 'package:get/get.dart';
// import 'package:lifestyle/components/address_box.dart';
// import 'package:lifestyle/components/app_constants.dart';
// import 'package:lifestyle/components/medium_text.dart';
// import 'package:lifestyle/features/address/screens/address_screen.dart';
// import 'package:lifestyle/features/address/services/address_services.dart';
// import 'package:lifestyle/features/cart/widgets/cart_products.dart';
// import 'package:lifestyle/features/cart/widgets/cart_subtotal.dart';
// import 'package:lifestyle/features/search/screen/search_screen.dart';
// import 'package:pay/pay.dart';
// import 'package:provider/provider.dart';
// import 'package:responsive_sizer/responsive_sizer.dart';
// import '../../../components/utils.dart';
// import '../../../providers/user_provider.dart';

// class CartScreen extends StatefulWidget {
//   const CartScreen({super.key});

//   @override
//   State<CartScreen> createState() => _CartScreenState();
// }

// class _CartScreenState extends State<CartScreen> {
//   final AddressServices addressServices = AddressServices();

//   final bool hasAddress = false;
//   String addressTOBeUsed = '';

//   final Future<PaymentConfiguration> _googlePayConfigFuture =
//       PaymentConfiguration.fromAsset('gPay.json');

//   final Future<PaymentConfiguration> _applePayConfigFuture =
//       PaymentConfiguration.fromAsset('applePay.json');

//   void onApplePayResult(res, sum) {
//     if (Provider.of<UserProvider>(context, listen: false)
//         .user
//         .address
//         .isEmpty) {
//       addressServices.saveUserAddress(
//           context: context, address: addressTOBeUsed);
//     }
//     addressServices.placeOrder(
//       context: context,
//       address: addressTOBeUsed,
//       totalSum: sum,
//     );
//   }

//   void onGooglePayResult(res, sum) {
//     addressServices.saveUserAddress(context: context, address: addressTOBeUsed);

//     addressServices.placeOrder(
//       context: context,
//       address: addressTOBeUsed,
//       totalSum: double.parse(sum.toString()),
//     );
//   }

//   final List<PaymentItem> _paymentItems = [];

//   void payPressed(addresFromProvider) {
//     addressTOBeUsed = '';
//     if (addresFromProvider.isNotEmpty) {
//       addressTOBeUsed = addresFromProvider;
//     } else {
//       showSnackBar(context, 'Failed: Try adding a new address');
//     }
//   }

//   @override
//   // void initState() {
//   //   super.initState();
//   //   _paymentItems.add(
//   //     PaymentItem(
//   //         amount: widget.total,
//   //         label: 'Total amount',
//   //         status: PaymentItemStatus.final_price),
//   //   );
//   // }

//   void navigateToSearchScreen(String query) {
//     Navigator.pushNamed(context, SearchScreen.routeName, arguments: query);
//   }

//   void navigateToAddressScreen(sum) {
//     Navigator.pushNamed(context, AddressScreen.routeName,
//         arguments: sum.toString());
//   }

//   @override
//   Widget build(BuildContext context) {
//     final address = context.watch<UserProvider>().user.address;
//     // const address = 'context.watch<UserProvider>().user.address';

//     final user = context.watch<UserProvider>().user;
//     dynamic userAddress = context.watch<UserProvider>().user.address;
//     //dynamic clearAddress = userAddress;

//     dynamic sum = 0;
//     user.cart
//         .map((e) => sum += e['quantity'] * e['product']['price'] as dynamic)
//         .toList();
//     @override
//     void initState() {
//       super.initState();
//       _paymentItems.add(
//         PaymentItem(
//             amount: sum.toString(),
//             label: 'Total amount',
//             status: PaymentItemStatus.final_price),
//       );
//     }

//     // final address = context.watch<UserProvider>().user.address;
//     // const demoAddress = '2, peace steet ijeododo Lagos';
//     return Scaffold(
//       body: SafeArea(
//         child: Column(
//           children: [
//             Container(
//               decoration: const BoxDecoration(
//                 color: Colors.transparent,
//                 boxShadow: [
//                   BoxShadow(
//                       color: Color(AppConstants.taupe),
//                       blurRadius: 15,
//                       spreadRadius: 15),
//                 ],
//               ),
//               child: Row(
//                 mainAxisAlignment: MainAxisAlignment.center,
//                 children: [
//                   Padding(
//                     padding: EdgeInsets.only(top: 2.h, bottom: 1.h),
//                     child: MediumText(
//                         text: 'Cart View', size: 22.sp, color: Colors.white),
//                   )
//                 ],
//               ),
//             ),
//             SizedBox(
//               height: 0.h,
//             ),
//             const AddressBox(),
//             // const CartSubtotal()
//             SizedBox(
//               height: 2.h,
//             ),
//             Expanded(
//               child: ListView.builder(
//                   itemCount: user.cart.length,
//                   itemBuilder: (context, index) {
//                     return CartProduct(index: index);
//                   }),
//             ),
//             proceedButton(address, sum, userAddress)
//           ],
//         ),
//       ),
//     );
//   }

//   Align proceedButton(String address, sum, userAddress) {
//     return Align(
//       alignment: Alignment.bottomCenter,
//       child: Container(
//           height: 10.h,
//           // margin: EdgeInsets.only(left: 3.w, right: 3.w),
//           // padding: EdgeInsets.only(right: 3.w),
//           decoration: BoxDecoration(
//               //  color: Colors.grey,
//               borderRadius: BorderRadius.circular(0)),
//           child: SingleChildScrollView(
//             child: Column(
//               // mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 // const CartSubtotal(),
//                 InkWell(
//                     onTap: () {
//                       address.isEmpty
//                           ? navigateToAddressScreen(sum)
//                           : Get.dialog(
//                               useSafeArea: true,
//                               barrierColor: Colors.grey.withOpacity(0.7),
//                               name: 'Address Option',
//                               AlertDialog(
//                                 title: MediumText(
//                                   text: 'Use This Address?',
//                                   size: 18.sp,
//                                 ),
//                                 content: MediumText(text: address),
//                                 actionsAlignment: MainAxisAlignment.end,
//                                 actionsPadding:
//                                     EdgeInsets.only(bottom: 2.h, right: 4.w),
//                                 alignment: Alignment.center,
//                                 icon: Icon(
//                                   Icons.info,
//                                   size: 25.sp,
//                                 ),
//                                 actions: [
//                                   InkWell(
//                                       onTap: () {
//                                         Get.back();
//                                         Get.dialog(
//                                           alertDialog(address, sum),
//                                         );
//                                       },
//                                       child: Padding(
//                                         padding: EdgeInsets.only(right: 6.w),
//                                         child: const MediumText(text: "Yes"),
//                                       )),
//                                   InkWell(
//                                       onTap: () {
//                                         userAddress = [];
//                                         setState(() {
//                                           hasAddress == true;
//                                         });
//                                         navigateToAddressScreen(sum);
//                                       },
//                                       child: const MediumText(text: "Add New"))
//                                 ],
//                               ),
//                             );
//                     },
//                     child: Container(
//                       decoration: BoxDecoration(
//                         color: Colors.grey,
//                         borderRadius: BorderRadius.circular(10.sp),
//                       ),
//                       padding: EdgeInsets.only(
//                         left: 3.w,
//                       ),
//                       height: 6.h,
//                       child: Row(
//                         mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                         children: [
//                           const CartSubtotal(),
//                           Flexible(
//                             child: Container(
//                               decoration: BoxDecoration(
//                                 boxShadow: const [
//                                   BoxShadow(
//                                       blurRadius: 2,
//                                       color: Colors.black12,
//                                       spreadRadius: 4)
//                                 ],
//                                 color: const Color(AppConstants.taupe),
//                                 borderRadius: BorderRadius.circular(10.sp),
//                               ),
//                               padding: EdgeInsets.only(right: 3.w, left: 2.w),
//                               alignment: Alignment.center,
//                               height: 6.h,
//                               child: Wrap(
//                                 spacing: 2.w,
//                                 children: [
//                                   MediumText(
//                                     text: 'Proceed',
//                                     size: 20.sp,
//                                   ),
//                                   const FaIcon(FontAwesomeIcons.arrowRight)
//                                 ],
//                               ),
//                             ),
//                           )
//                         ],
//                       ),
//                     ))
//               ],
//             ),
//           )),
//     );
//   }

//   Widget alertDialog(address, sum) {
//     return Container(
//       padding: EdgeInsets.all(20.sp),
//       margin: EdgeInsets.symmetric(vertical: 15.h, horizontal: 10.w),
//       decoration: BoxDecoration(
//           color: Colors.white, borderRadius: BorderRadius.circular(13.sp)),
//       child: Scaffold(
//         backgroundColor: Colors.white,
//         body: Column(
//           mainAxisAlignment: MainAxisAlignment.end,
//           crossAxisAlignment: CrossAxisAlignment.center,
//           children: [
//             Center(
//               child: GestureDetector(
//                 child: FutureBuilder<PaymentConfiguration>(
//                   future: _googlePayConfigFuture,
//                   builder: (context, snapshot) => snapshot.hasData
//                       ? GooglePayButton(
//                           onPressed: () => payPressed(address),
//                           onError: (error) {
//                             log('Gpay btn Error: $error');
//                           },
//                           paymentConfiguration: snapshot.data!,
//                           paymentItems: _paymentItems,
//                           type: GooglePayButtonType.buy,
//                           margin: const EdgeInsets.only(top: 15.0),
//                           onPaymentResult: ((result) {
//                             onGooglePayResult(result, sum);
//                           }),
//                           loadingIndicator: const Center(
//                             child: CircularProgressIndicator(),
//                           ),
//                         )
//                       : const SizedBox.shrink(),
//                 ),
//               ),
//             ),
//             GestureDetector(
//               child: FutureBuilder<PaymentConfiguration>(
//                 future: _applePayConfigFuture,
//                 builder: (context, snapshot) => snapshot.hasData
//                     ? ApplePayButton(
//                         onPressed: () => payPressed(address),
//                         paymentConfiguration: snapshot.data!,
//                         paymentItems: _paymentItems,
//                         type: ApplePayButtonType.buy,
//                         margin: const EdgeInsets.only(top: 15.0),
//                         onPaymentResult: ((result) {
//                           onApplePayResult(result, sum);
//                         }),
//                         loadingIndicator: const Center(
//                           child: CircularProgressIndicator(),
//                         ),
//                       )
//                     : const SizedBox.shrink(),
//               ),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }
